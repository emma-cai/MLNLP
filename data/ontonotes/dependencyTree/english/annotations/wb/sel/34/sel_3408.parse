1	when	when	ADV	WRB	_	3	advmod	_	_
2	*PRO*	*pro*	NOUN	NN	_	3	nsubj	_	_
3	allocating	allocate	VERB	VBG	_	15	advcl	_	_
4	a	a	DET	DT	_	6	det	_	_
5	big	big	ADJ	JJ	_	6	amod	_	_
6	array	array	NOUN	NN	_	3	dobj	_	_
7	on	on	ADP	IN	_	6	prep	_	_
8	stack	stack	NOUN	NN	_	7	pobj	_	_
9	on	on	ADP	IN	_	3	prep	_	_
10	Win32	Win32	PROPN	NNP	_	9	pobj	_	_
11	*T*-1	*t*-1	X	X	_	3	advmod	_	_
12	,	,	PUNCT	,	_	15	punct	_	_
13	they	they	PRON	PRP	_	15	nsubj	_	_
14	may	may	AUX	MD	_	15	aux	_	_
15	call	call	VERB	VB	_	0	root	_	_
16	a	a	DET	DT	_	17	det	_	_
17	function	function	NOUN	NN	_	15	dobj	_	_
18	-LRB-	-lrb-	PUNCT	-LRB-	_	17	punct	_	_
19	whose	whose	PRON	WP$	_	20	poss	_	_
20	name	name	NOUN	NN	_	22	dobj	_	_
21	*T*-2	*t*-2	NOUN	NN	_	22	nsubj	_	_
22	starts	start	VERB	VBZ	_	17	rcmod	_	_
23	with	with	ADP	IN	_	22	prep	_	_
24	two	two	NUM	CD	_	25	num	_	_
25	underscores	underscore	NOUN	NNS	_	23	pobj	_	_
26	or	or	CONJ	CC	_	25	cc	_	_
27	one	one	NUM	CD	_	28	num	_	_
28	underscore	underscore	NOUN	NN	_	25	conj	_	_
29	and	and	CONJ	CC	_	28	cc	_	_
30	a	a	DET	DT	_	34	det	_	_
31	upper	upper	ADJ	JJ	_	33	amod	_	_
32	-	-	PUNCT	HYPH	_	33	punct	_	_
33	case	case	NOUN	NN	_	34	nn	_	_
34	letter	letter	NOUN	NN	_	28	conj	_	_
35	-RRB-	-rrb-	PUNCT	-RRB-	_	17	punct	_	_
36	that	that	DET	WDT	_	38	dobj	_	_
37	*T*-3	*t*-3	NOUN	NN	_	38	nsubj	_	_
38	touches	touch	VERB	VBZ	_	17	rcmod	_	_
39	the	the	DET	DT	_	40	det	_	_
40	stack	stack	NOUN	NN	_	38	dobj	_	_
41	at	at	ADP	IN	_	38	prep	_	_
42	every	every	DET	DT	_	43	det	_	_
43	multiple	multiple	NOUN	NN	_	41	pobj	_	_
44	of	of	ADP	IN	_	43	prep	_	_
45	4096	4096	NUM	CD	_	46	num	_	_
46	bytes	byte	NOUN	NNS	_	44	pobj	_	_
47	.	.	PUNCT	.	_	15	punct	_	_

